{"ast":null,"code":"import _defineProperty from \"/root/FrontPlatform/vue-front/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nvar _mutations;\nimport { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    vCodepath: \"\",\n    username: \"\",\n    password: \"\",\n    verificationCode: \"\",\n    verificationCodeId: \"\",\n    loginStatus: true,\n    errMsg: \"\"\n  },\n  getters: {\n    getVcodePath: function getVcodePath(state) {\n      return state.vCodepath;\n    },\n    getUserName: function getUserName(state) {\n      return state.username;\n    },\n    getPassWord: function getPassWord(state) {\n      return state.password;\n    },\n    getVerificationCode: function getVerificationCode(state) {\n      return state.verificationCode;\n    },\n    getVerificationCodeId: function getVerificationCodeId(state) {\n      return state.verificationCodeId;\n    },\n    getLoginStatus: function getLoginStatus(state) {\n      return state.loginStatus;\n    },\n    getErrMsg: function getErrMsg(state) {\n      return state.errMsg;\n    }\n  },\n  mutations: (_mutations = {\n    setVcodePath: function setVcodePath(state, vCodepath) {\n      state.vCodepath = vCodepath;\n    },\n    setUserName: function setUserName(state, username) {\n      state.username = username;\n    },\n    setPassWord: function setPassWord(state, password) {\n      state.password = password;\n    },\n    setVerificationCode: function setVerificationCode(state, verificationCode) {\n      state.verificationCode = verificationCode;\n    },\n    setVerificationCodeId: function setVerificationCodeId(state, verificationCodeId) {\n      state.verificationCodeId = verificationCodeId;\n    },\n    setLoginStatus: function setLoginStatus(state, loginStatus) {\n      state.loginStatus = loginStatus;\n    }\n  }, _defineProperty(_mutations, \"setLoginStatus\", function setLoginStatus(state, loginStatus) {\n    state.loginStatus = loginStatus;\n  }), _defineProperty(_mutations, \"setErrMsg\", function setErrMsg(state, errMsg) {\n    state.errMsg = errMsg;\n  }), _mutations),\n  actions: {\n    // asyncGetVerification({ commit }){\n    //   api.getVerificationCode()\n    //   .then(res =>{\n    //     commit(\"update v-code\",res.msg)\n    //   })\n    //  }\n  },\n  modules: {}\n});","map":{"version":3,"names":["createStore","state","vCodepath","username","password","verificationCode","verificationCodeId","loginStatus","errMsg","getters","getVcodePath","getUserName","getPassWord","getVerificationCode","getVerificationCodeId","getLoginStatus","getErrMsg","mutations","_mutations","setVcodePath","setUserName","setPassWord","setVerificationCode","setVerificationCodeId","setLoginStatus","_defineProperty","setErrMsg","actions","modules"],"sources":["/root/FrontPlatform/vue-front/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\n\nexport default createStore({\n  state: {\n    vCodepath: \"\",\n    username: \"\",\n    password: \"\",\n    verificationCode: \"\",\n    verificationCodeId: \"\",\n    loginStatus: true,\n    errMsg: \"\"\n  },\n  getters: {\n    getVcodePath(state) {\n      return state.vCodepath\n    },\n    getUserName(state) {\n      return state.username\n    },\n    getPassWord(state) {\n      return state.password\n    },\n    getVerificationCode(state) {\n      return state.verificationCode\n    },\n    getVerificationCodeId(state) {\n      return state.verificationCodeId\n    }, \n    getLoginStatus(state){\n      return state.loginStatus\n    },\n    getErrMsg(state){\n      return state.errMsg\n    }\n  },\n  mutations: {\n    setVcodePath(state,vCodepath) {\n      state.vCodepath = vCodepath\n    },\n    setUserName(state,username) {\n      state.username = username\n    },\n    setPassWord(state, password) {\n      state.password = password\n    },\n    setVerificationCode(state, verificationCode) {\n      state.verificationCode = verificationCode\n    },\n    setVerificationCodeId(state,verificationCodeId) {\n      state.verificationCodeId = verificationCodeId\n    },\n    setLoginStatus(state, loginStatus){\n      state.loginStatus = loginStatus\n    },\n    setLoginStatus(state, loginStatus){\n      state.loginStatus = loginStatus\n    },\n    setErrMsg(state, errMsg){\n      state.errMsg = errMsg\n    }\n\n  },\n  actions: {\n    // asyncGetVerification({ commit }){\n    //   api.getVerificationCode()\n    //   .then(res =>{\n    //     commit(\"update v-code\",res.msg)\n    //   })\n    //  }\n  },\n  modules: {\n  }\n})\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,MAAM;AAElC,eAAeA,WAAW,CAAC;EACzBC,KAAK,EAAE;IACLC,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,gBAAgB,EAAE,EAAE;IACpBC,kBAAkB,EAAE,EAAE;IACtBC,WAAW,EAAE,IAAI;IACjBC,MAAM,EAAE;EACV,CAAC;EACDC,OAAO,EAAE;IACPC,YAAY,WAAAA,aAACT,KAAK,EAAE;MAClB,OAAOA,KAAK,CAACC,SAAS;IACxB,CAAC;IACDS,WAAW,WAAAA,YAACV,KAAK,EAAE;MACjB,OAAOA,KAAK,CAACE,QAAQ;IACvB,CAAC;IACDS,WAAW,WAAAA,YAACX,KAAK,EAAE;MACjB,OAAOA,KAAK,CAACG,QAAQ;IACvB,CAAC;IACDS,mBAAmB,WAAAA,oBAACZ,KAAK,EAAE;MACzB,OAAOA,KAAK,CAACI,gBAAgB;IAC/B,CAAC;IACDS,qBAAqB,WAAAA,sBAACb,KAAK,EAAE;MAC3B,OAAOA,KAAK,CAACK,kBAAkB;IACjC,CAAC;IACDS,cAAc,WAAAA,eAACd,KAAK,EAAC;MACnB,OAAOA,KAAK,CAACM,WAAW;IAC1B,CAAC;IACDS,SAAS,WAAAA,UAACf,KAAK,EAAC;MACd,OAAOA,KAAK,CAACO,MAAM;IACrB;EACF,CAAC;EACDS,SAAS,GAAAC,UAAA;IACPC,YAAY,WAAAA,aAAClB,KAAK,EAACC,SAAS,EAAE;MAC5BD,KAAK,CAACC,SAAS,GAAGA,SAAS;IAC7B,CAAC;IACDkB,WAAW,WAAAA,YAACnB,KAAK,EAACE,QAAQ,EAAE;MAC1BF,KAAK,CAACE,QAAQ,GAAGA,QAAQ;IAC3B,CAAC;IACDkB,WAAW,WAAAA,YAACpB,KAAK,EAAEG,QAAQ,EAAE;MAC3BH,KAAK,CAACG,QAAQ,GAAGA,QAAQ;IAC3B,CAAC;IACDkB,mBAAmB,WAAAA,oBAACrB,KAAK,EAAEI,gBAAgB,EAAE;MAC3CJ,KAAK,CAACI,gBAAgB,GAAGA,gBAAgB;IAC3C,CAAC;IACDkB,qBAAqB,WAAAA,sBAACtB,KAAK,EAACK,kBAAkB,EAAE;MAC9CL,KAAK,CAACK,kBAAkB,GAAGA,kBAAkB;IAC/C,CAAC;IACDkB,cAAc,WAAAA,eAACvB,KAAK,EAAEM,WAAW,EAAC;MAChCN,KAAK,CAACM,WAAW,GAAGA,WAAW;IACjC;EAAC,GAAAkB,eAAA,CAAAP,UAAA,6BAAAM,eACcvB,KAAK,EAAEM,WAAW,EAAC;IAChCN,KAAK,CAACM,WAAW,GAAGA,WAAW;EACjC,CAAC,GAAAkB,eAAA,CAAAP,UAAA,wBAAAQ,UACSzB,KAAK,EAAEO,MAAM,EAAC;IACtBP,KAAK,CAACO,MAAM,GAAGA,MAAM;EACvB,CAAC,GAAAU,UAAA,CAEF;EACDS,OAAO,EAAE;IACP;IACA;IACA;IACA;IACA;IACA;EAAA,CACD;EACDC,OAAO,EAAE,CACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}