{"ast":null,"code":"import \"core-js/modules/es.parse-float.js\";\nimport \"core-js/modules/es.number.to-precision.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.split.js\";\nimport \"core-js/modules/es.error.to-string.js\";\nimport \"core-js/modules/es.date.to-string.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.array.index-of.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"core-js/modules/es.number.max-safe-integer.js\";\nimport \"core-js/modules/es.number.min-safe-integer.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.reduce.js\";\n/**\r\n * @desc 解决浮动运算问题，避免小数点后产生多位数和计算精度损失。\r\n *\r\n * 问题示例：2.3 + 2.4 = 4.699999999999999，1.0 - 0.9 = 0.09999999999999998\r\n */\n/**\r\n * Correct the given number to specifying significant digits.\r\n *\r\n * @param num The input number\r\n * @param precision An integer specifying the number of significant digits\r\n *\r\n * @example strip(0.09999999999999998) === 0.1 // true\r\n */\nfunction strip(num, precision) {\n  if (precision === void 0) {\n    precision = 15;\n  }\n  return +parseFloat(Number(num).toPrecision(precision));\n}\n/**\r\n * Return digits length of a number.\r\n *\r\n * @param num The input number\r\n */\nfunction digitLength(num) {\n  // Get digit length of e\n  var eSplit = num.toString().split(/[eE]/);\n  var len = (eSplit[0].split('.')[1] || '').length - +(eSplit[1] || 0);\n  return len > 0 ? len : 0;\n}\n/**\r\n * Convert the given number to integer, support scientific notation.\r\n * The number will be scale up if it is decimal.\r\n *\r\n * @param num The input number\r\n */\nfunction float2Fixed(num) {\n  if (num.toString().indexOf('e') === -1) {\n    return Number(num.toString().replace('.', ''));\n  }\n  var dLen = digitLength(num);\n  return dLen > 0 ? strip(Number(num) * Math.pow(10, dLen)) : Number(num);\n}\n/**\r\n * Log a warning if the given number is out of bounds.\r\n *\r\n * @param num The input number\r\n */\nfunction checkBoundary(num) {\n  if (_boundaryCheckingState) {\n    if (num > Number.MAX_SAFE_INTEGER || num < Number.MIN_SAFE_INTEGER) {\n      console.warn(num + \" is beyond boundary when transfer to integer, the results may not be accurate\");\n    }\n  }\n}\n/**\r\n * Create an operation to support rest params.\r\n *\r\n * @param operation The original operation\r\n */\nfunction createOperation(operation) {\n  return function () {\n    var nums = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      nums[_i] = arguments[_i];\n    }\n    var first = nums[0],\n      others = nums.slice(1);\n    return others.reduce(function (prev, next) {\n      return operation(prev, next);\n    }, first);\n  };\n}\n/**\r\n * Accurate multiplication.\r\n *\r\n * @param nums The numbers to multiply\r\n */\nvar times = createOperation(function (num1, num2) {\n  var num1Changed = float2Fixed(num1);\n  var num2Changed = float2Fixed(num2);\n  var baseNum = digitLength(num1) + digitLength(num2);\n  var leftValue = num1Changed * num2Changed;\n  checkBoundary(leftValue);\n  return leftValue / Math.pow(10, baseNum);\n});\n/**\r\n * Accurate addition.\r\n *\r\n * @param nums The numbers to add\r\n */\nvar plus = createOperation(function (num1, num2) {\n  // 取最大的小数位\n  var baseNum = Math.pow(10, Math.max(digitLength(num1), digitLength(num2)));\n  // 把小数都转为整数然后再计算\n  return (times(num1, baseNum) + times(num2, baseNum)) / baseNum;\n});\n/**\r\n * Accurate subtraction.\r\n *\r\n * @param nums The numbers to subtract\r\n */\nvar minus = createOperation(function (num1, num2) {\n  var baseNum = Math.pow(10, Math.max(digitLength(num1), digitLength(num2)));\n  return (times(num1, baseNum) - times(num2, baseNum)) / baseNum;\n});\n/**\r\n * Accurate division.\r\n *\r\n * @param nums The numbers to divide\r\n */\nvar divide = createOperation(function (num1, num2) {\n  var num1Changed = float2Fixed(num1);\n  var num2Changed = float2Fixed(num2);\n  checkBoundary(num1Changed);\n  checkBoundary(num2Changed);\n  // fix: 类似 10 ** -4 为 0.00009999999999999999，strip 修正\n  return times(num1Changed / num2Changed, strip(Math.pow(10, digitLength(num2) - digitLength(num1))));\n});\n/**\r\n * Accurate rounding method.\r\n *\r\n * @param num The number to round\r\n * @param decimal An integer specifying the decimal digits\r\n */\nfunction round(num, decimal) {\n  var base = Math.pow(10, decimal);\n  var result = divide(Math.round(Math.abs(times(num, base))), base);\n  if (num < 0 && result !== 0) {\n    result = times(result, -1);\n  }\n  return result;\n}\nvar _boundaryCheckingState = true;\n/**\r\n * Whether to check the bounds of number, default is enabled.\r\n *\r\n * @param flag The value to indicate whether is enabled\r\n */\nfunction enableBoundaryChecking(flag) {\n  if (flag === void 0) {\n    flag = true;\n  }\n  _boundaryCheckingState = flag;\n}\nvar index = {\n  strip: strip,\n  plus: plus,\n  minus: minus,\n  times: times,\n  divide: divide,\n  round: round,\n  digitLength: digitLength,\n  float2Fixed: float2Fixed,\n  enableBoundaryChecking: enableBoundaryChecking\n};\nexport { strip, plus, minus, times, divide, round, digitLength, float2Fixed, enableBoundaryChecking };\nexport default index;","map":{"version":3,"names":["strip","num","precision","parseFloat","Number","toPrecision","digitLength","eSplit","toString","split","len","length","float2Fixed","indexOf","replace","dLen","Math","pow","checkBoundary","_boundaryCheckingState","MAX_SAFE_INTEGER","MIN_SAFE_INTEGER","console","warn","createOperation","operation","nums","_i","arguments","first","others","slice","reduce","prev","next","times","num1","num2","num1Changed","num2Changed","baseNum","leftValue","plus","max","minus","divide","round","decimal","base","result","abs","enableBoundaryChecking","flag","index"],"sources":["/root/FrontPlatform/vue-front/node_modules/number-precision/build/index.es.js"],"sourcesContent":["/**\r\n * @desc 解决浮动运算问题，避免小数点后产生多位数和计算精度损失。\r\n *\r\n * 问题示例：2.3 + 2.4 = 4.699999999999999，1.0 - 0.9 = 0.09999999999999998\r\n */\r\n/**\r\n * Correct the given number to specifying significant digits.\r\n *\r\n * @param num The input number\r\n * @param precision An integer specifying the number of significant digits\r\n *\r\n * @example strip(0.09999999999999998) === 0.1 // true\r\n */\r\nfunction strip(num, precision) {\r\n    if (precision === void 0) { precision = 15; }\r\n    return +parseFloat(Number(num).toPrecision(precision));\r\n}\r\n/**\r\n * Return digits length of a number.\r\n *\r\n * @param num The input number\r\n */\r\nfunction digitLength(num) {\r\n    // Get digit length of e\r\n    var eSplit = num.toString().split(/[eE]/);\r\n    var len = (eSplit[0].split('.')[1] || '').length - +(eSplit[1] || 0);\r\n    return len > 0 ? len : 0;\r\n}\r\n/**\r\n * Convert the given number to integer, support scientific notation.\r\n * The number will be scale up if it is decimal.\r\n *\r\n * @param num The input number\r\n */\r\nfunction float2Fixed(num) {\r\n    if (num.toString().indexOf('e') === -1) {\r\n        return Number(num.toString().replace('.', ''));\r\n    }\r\n    var dLen = digitLength(num);\r\n    return dLen > 0 ? strip(Number(num) * Math.pow(10, dLen)) : Number(num);\r\n}\r\n/**\r\n * Log a warning if the given number is out of bounds.\r\n *\r\n * @param num The input number\r\n */\r\nfunction checkBoundary(num) {\r\n    if (_boundaryCheckingState) {\r\n        if (num > Number.MAX_SAFE_INTEGER || num < Number.MIN_SAFE_INTEGER) {\r\n            console.warn(num + \" is beyond boundary when transfer to integer, the results may not be accurate\");\r\n        }\r\n    }\r\n}\r\n/**\r\n * Create an operation to support rest params.\r\n *\r\n * @param operation The original operation\r\n */\r\nfunction createOperation(operation) {\r\n    return function () {\r\n        var nums = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            nums[_i] = arguments[_i];\r\n        }\r\n        var first = nums[0], others = nums.slice(1);\r\n        return others.reduce(function (prev, next) { return operation(prev, next); }, first);\r\n    };\r\n}\r\n/**\r\n * Accurate multiplication.\r\n *\r\n * @param nums The numbers to multiply\r\n */\r\nvar times = createOperation(function (num1, num2) {\r\n    var num1Changed = float2Fixed(num1);\r\n    var num2Changed = float2Fixed(num2);\r\n    var baseNum = digitLength(num1) + digitLength(num2);\r\n    var leftValue = num1Changed * num2Changed;\r\n    checkBoundary(leftValue);\r\n    return leftValue / Math.pow(10, baseNum);\r\n});\r\n/**\r\n * Accurate addition.\r\n *\r\n * @param nums The numbers to add\r\n */\r\nvar plus = createOperation(function (num1, num2) {\r\n    // 取最大的小数位\r\n    var baseNum = Math.pow(10, Math.max(digitLength(num1), digitLength(num2)));\r\n    // 把小数都转为整数然后再计算\r\n    return (times(num1, baseNum) + times(num2, baseNum)) / baseNum;\r\n});\r\n/**\r\n * Accurate subtraction.\r\n *\r\n * @param nums The numbers to subtract\r\n */\r\nvar minus = createOperation(function (num1, num2) {\r\n    var baseNum = Math.pow(10, Math.max(digitLength(num1), digitLength(num2)));\r\n    return (times(num1, baseNum) - times(num2, baseNum)) / baseNum;\r\n});\r\n/**\r\n * Accurate division.\r\n *\r\n * @param nums The numbers to divide\r\n */\r\nvar divide = createOperation(function (num1, num2) {\r\n    var num1Changed = float2Fixed(num1);\r\n    var num2Changed = float2Fixed(num2);\r\n    checkBoundary(num1Changed);\r\n    checkBoundary(num2Changed);\r\n    // fix: 类似 10 ** -4 为 0.00009999999999999999，strip 修正\r\n    return times(num1Changed / num2Changed, strip(Math.pow(10, digitLength(num2) - digitLength(num1))));\r\n});\r\n/**\r\n * Accurate rounding method.\r\n *\r\n * @param num The number to round\r\n * @param decimal An integer specifying the decimal digits\r\n */\r\nfunction round(num, decimal) {\r\n    var base = Math.pow(10, decimal);\r\n    var result = divide(Math.round(Math.abs(times(num, base))), base);\r\n    if (num < 0 && result !== 0) {\r\n        result = times(result, -1);\r\n    }\r\n    return result;\r\n}\r\nvar _boundaryCheckingState = true;\r\n/**\r\n * Whether to check the bounds of number, default is enabled.\r\n *\r\n * @param flag The value to indicate whether is enabled\r\n */\r\nfunction enableBoundaryChecking(flag) {\r\n    if (flag === void 0) { flag = true; }\r\n    _boundaryCheckingState = flag;\r\n}\r\nvar index = {\r\n    strip: strip,\r\n    plus: plus,\r\n    minus: minus,\r\n    times: times,\r\n    divide: divide,\r\n    round: round,\r\n    digitLength: digitLength,\r\n    float2Fixed: float2Fixed,\r\n    enableBoundaryChecking: enableBoundaryChecking,\r\n};\n\nexport { strip, plus, minus, times, divide, round, digitLength, float2Fixed, enableBoundaryChecking };\nexport default index;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}