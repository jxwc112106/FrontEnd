{"ast":null,"code":"import { toRefs, computed } from \"vue\";\nimport { getColumnsFromFormat } from \"../utils/index.js\";\nfunction useTimeFormat(props) {\n  var _toRefs = toRefs(props),\n    propFormat = _toRefs.format,\n    propUse12Hours = _toRefs.use12Hours,\n    defaultFormat = _toRefs.defaultFormat;\n  var format = computed(function () {\n    var res = (propFormat == null ? void 0 : propFormat.value) || (defaultFormat == null ? void 0 : defaultFormat.value);\n    if (!res || !getColumnsFromFormat(res).list.length) {\n      res = (propUse12Hours == null ? void 0 : propUse12Hours.value) ? \"hh:mm:ss a\" : \"HH:mm:ss\";\n    }\n    return res;\n  });\n  var configFromFormat = computed(function () {\n    return getColumnsFromFormat(format.value);\n  });\n  var list = computed(function () {\n    return configFromFormat.value.list;\n  });\n  var formatUse12Hours = computed(function () {\n    return configFromFormat.value.use12Hours;\n  });\n  var computedUse12Hours = computed(function () {\n    return !!((propUse12Hours == null ? void 0 : propUse12Hours.value) || formatUse12Hours.value);\n  });\n  return {\n    columns: list,\n    use12Hours: computedUse12Hours,\n    format: format\n  };\n}\nexport { useTimeFormat as default };","map":{"version":3,"names":["toRefs","computed","getColumnsFromFormat","useTimeFormat","props","_toRefs","propFormat","format","propUse12Hours","use12Hours","defaultFormat","res","value","list","length","configFromFormat","formatUse12Hours","computedUse12Hours","columns","default"],"sources":["/root/FrontPlatform/vue-front/node_modules/@arco-design/web-vue/es/time-picker/hooks/use-time-format.js"],"sourcesContent":["import { toRefs, computed } from \"vue\";\nimport { getColumnsFromFormat } from \"../utils/index.js\";\nfunction useTimeFormat(props) {\n  const {\n    format: propFormat,\n    use12Hours: propUse12Hours,\n    defaultFormat\n  } = toRefs(props);\n  const format = computed(() => {\n    let res = (propFormat == null ? void 0 : propFormat.value) || (defaultFormat == null ? void 0 : defaultFormat.value);\n    if (!res || !getColumnsFromFormat(res).list.length) {\n      res = (propUse12Hours == null ? void 0 : propUse12Hours.value) ? \"hh:mm:ss a\" : \"HH:mm:ss\";\n    }\n    return res;\n  });\n  const configFromFormat = computed(() => getColumnsFromFormat(format.value));\n  const list = computed(() => configFromFormat.value.list);\n  const formatUse12Hours = computed(() => configFromFormat.value.use12Hours);\n  const computedUse12Hours = computed(() => !!((propUse12Hours == null ? void 0 : propUse12Hours.value) || formatUse12Hours.value));\n  return {\n    columns: list,\n    use12Hours: computedUse12Hours,\n    format\n  };\n}\nexport { useTimeFormat as default };\n"],"mappings":"AAAA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,KAAK;AACtC,SAASC,oBAAoB,QAAQ,mBAAmB;AACxD,SAASC,aAAaA,CAACC,KAAK,EAAE;EAC5B,IAAAC,OAAA,GAIIL,MAAM,CAACI,KAAK,CAAC;IAHPE,UAAU,GAAAD,OAAA,CAAlBE,MAAM;IACMC,cAAc,GAAAH,OAAA,CAA1BI,UAAU;IACVC,aAAa,GAAAL,OAAA,CAAbK,aAAa;EAEf,IAAMH,MAAM,GAAGN,QAAQ,CAAC,YAAM;IAC5B,IAAIU,GAAG,GAAG,CAACL,UAAU,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,UAAU,CAACM,KAAK,MAAMF,aAAa,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,aAAa,CAACE,KAAK,CAAC;IACpH,IAAI,CAACD,GAAG,IAAI,CAACT,oBAAoB,CAACS,GAAG,CAAC,CAACE,IAAI,CAACC,MAAM,EAAE;MAClDH,GAAG,GAAG,CAACH,cAAc,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,cAAc,CAACI,KAAK,IAAI,YAAY,GAAG,UAAU;IAC5F;IACA,OAAOD,GAAG;EACZ,CAAC,CAAC;EACF,IAAMI,gBAAgB,GAAGd,QAAQ,CAAC;IAAA,OAAMC,oBAAoB,CAACK,MAAM,CAACK,KAAK,CAAC;EAAA,EAAC;EAC3E,IAAMC,IAAI,GAAGZ,QAAQ,CAAC;IAAA,OAAMc,gBAAgB,CAACH,KAAK,CAACC,IAAI;EAAA,EAAC;EACxD,IAAMG,gBAAgB,GAAGf,QAAQ,CAAC;IAAA,OAAMc,gBAAgB,CAACH,KAAK,CAACH,UAAU;EAAA,EAAC;EAC1E,IAAMQ,kBAAkB,GAAGhB,QAAQ,CAAC;IAAA,OAAM,CAAC,EAAE,CAACO,cAAc,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,cAAc,CAACI,KAAK,KAAKI,gBAAgB,CAACJ,KAAK,CAAC;EAAA,EAAC;EACjI,OAAO;IACLM,OAAO,EAAEL,IAAI;IACbJ,UAAU,EAAEQ,kBAAkB;IAC9BV,MAAM,EAANA;EACF,CAAC;AACH;AACA,SAASJ,aAAa,IAAIgB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}