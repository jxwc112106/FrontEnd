{"ast":null,"code":"import _toConsumableArray from \"/root/FrontPlatform/vue-front/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport { isDayjs, isUndefined, isArray } from \"../../_utils/is.js\";\nfunction newArray(length) {\n  return _toConsumableArray(Array(length));\n}\nfunction normalizeRangeValue(value) {\n  if (isUndefined(value)) {\n    return void 0;\n  }\n  return isArray(value) ? value : [value, void 0];\n}\nfunction isCompleteRangeValue(value) {\n  return !!value && isDayjs(value[0]) && isDayjs(value[1]);\n}\nfunction isValidRangeValue(value) {\n  return isUndefined(value) || value.length === 0 || isCompleteRangeValue(value);\n}\nfunction mergeValueWithTime(defaultValue, dateValue, timeValue) {\n  var dateVal = dateValue || defaultValue;\n  var timeVal = timeValue || defaultValue;\n  return timeVal.set(\"year\", dateVal.year()).set(\"month\", dateVal.month()).set(\"date\", dateVal.date());\n}\nexport { isCompleteRangeValue, isValidRangeValue, mergeValueWithTime, newArray, normalizeRangeValue };","map":{"version":3,"names":["isDayjs","isUndefined","isArray","newArray","length","_toConsumableArray","Array","normalizeRangeValue","value","isCompleteRangeValue","isValidRangeValue","mergeValueWithTime","defaultValue","dateValue","timeValue","dateVal","timeVal","set","year","month","date"],"sources":["/root/FrontPlatform/vue-front/node_modules/@arco-design/web-vue/es/date-picker/utils/index.js"],"sourcesContent":["import { isDayjs, isUndefined, isArray } from \"../../_utils/is.js\";\nfunction newArray(length) {\n  return [...Array(length)];\n}\nfunction normalizeRangeValue(value) {\n  if (isUndefined(value)) {\n    return void 0;\n  }\n  return isArray(value) ? value : [value, void 0];\n}\nfunction isCompleteRangeValue(value) {\n  return !!value && isDayjs(value[0]) && isDayjs(value[1]);\n}\nfunction isValidRangeValue(value) {\n  return isUndefined(value) || value.length === 0 || isCompleteRangeValue(value);\n}\nfunction mergeValueWithTime(defaultValue, dateValue, timeValue) {\n  const dateVal = dateValue || defaultValue;\n  const timeVal = timeValue || defaultValue;\n  return timeVal.set(\"year\", dateVal.year()).set(\"month\", dateVal.month()).set(\"date\", dateVal.date());\n}\nexport { isCompleteRangeValue, isValidRangeValue, mergeValueWithTime, newArray, normalizeRangeValue };\n"],"mappings":";AAAA,SAASA,OAAO,EAAEC,WAAW,EAAEC,OAAO,QAAQ,oBAAoB;AAClE,SAASC,QAAQA,CAACC,MAAM,EAAE;EACxB,OAAAC,kBAAA,CAAWC,KAAK,CAACF,MAAM,CAAC;AAC1B;AACA,SAASG,mBAAmBA,CAACC,KAAK,EAAE;EAClC,IAAIP,WAAW,CAACO,KAAK,CAAC,EAAE;IACtB,OAAO,KAAK,CAAC;EACf;EACA,OAAON,OAAO,CAACM,KAAK,CAAC,GAAGA,KAAK,GAAG,CAACA,KAAK,EAAE,KAAK,CAAC,CAAC;AACjD;AACA,SAASC,oBAAoBA,CAACD,KAAK,EAAE;EACnC,OAAO,CAAC,CAACA,KAAK,IAAIR,OAAO,CAACQ,KAAK,CAAC,CAAC,CAAC,CAAC,IAAIR,OAAO,CAACQ,KAAK,CAAC,CAAC,CAAC,CAAC;AAC1D;AACA,SAASE,iBAAiBA,CAACF,KAAK,EAAE;EAChC,OAAOP,WAAW,CAACO,KAAK,CAAC,IAAIA,KAAK,CAACJ,MAAM,KAAK,CAAC,IAAIK,oBAAoB,CAACD,KAAK,CAAC;AAChF;AACA,SAASG,kBAAkBA,CAACC,YAAY,EAAEC,SAAS,EAAEC,SAAS,EAAE;EAC9D,IAAMC,OAAO,GAAGF,SAAS,IAAID,YAAY;EACzC,IAAMI,OAAO,GAAGF,SAAS,IAAIF,YAAY;EACzC,OAAOI,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEF,OAAO,CAACG,IAAI,EAAE,CAAC,CAACD,GAAG,CAAC,OAAO,EAAEF,OAAO,CAACI,KAAK,EAAE,CAAC,CAACF,GAAG,CAAC,MAAM,EAAEF,OAAO,CAACK,IAAI,EAAE,CAAC;AACtG;AACA,SAASX,oBAAoB,EAAEC,iBAAiB,EAAEC,kBAAkB,EAAER,QAAQ,EAAEI,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}