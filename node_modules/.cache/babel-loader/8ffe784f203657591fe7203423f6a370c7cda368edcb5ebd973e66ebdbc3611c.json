{"ast":null,"code":"import _toConsumableArray from \"/root/FrontPlatform/vue-front/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport \"core-js/modules/es.function.bind.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.set.js\";\nimport \"core-js/modules/es.string.iterator.js\";\nimport \"core-js/modules/web.dom-collections.iterator.js\";\nimport \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.some.js\";\nfunction SetAdd(set) {\n  return Set.prototype.add.bind(set);\n}\nfunction SetDelete(set) {\n  return Set.prototype[\"delete\"].bind(set);\n}\nfunction isNodeCheckable(node) {\n  if (node.disabled || node.disableCheckbox) return false;\n  return !!node.checkable;\n}\nfunction getChildrenKeys(node) {\n  var _a;\n  var keys = [];\n  (_a = node.children) == null ? void 0 : _a.forEach(function (child) {\n    if (isNodeCheckable(child)) {\n      keys.push.apply(keys, [child.key].concat(_toConsumableArray(getChildrenKeys(child))));\n    }\n  });\n  return keys;\n}\nfunction updateParent(options) {\n  var _a;\n  var node = options.node,\n    checkedKeySet = options.checkedKeySet,\n    indeterminateKeySet = options.indeterminateKeySet;\n  var parentNode = node.parent;\n  var _loop = function _loop() {\n    if (isNodeCheckable(parentNode)) {\n      var parentKey = parentNode.key;\n      var children = ((_a = parentNode.children) == null ? void 0 : _a.filter(isNodeCheckable)) || [];\n      var checkedCount = 0;\n      var total = children.length;\n      children.some(function (_ref) {\n        var childKey = _ref.key;\n        if (checkedKeySet.has(childKey)) {\n          checkedCount += 1;\n        } else if (indeterminateKeySet.has(childKey)) {\n          checkedCount += 0.5;\n          return true;\n        }\n        return false;\n      });\n      if (checkedCount && checkedCount !== total) {\n        indeterminateKeySet.add(parentKey);\n      } else {\n        indeterminateKeySet[\"delete\"](parentKey);\n      }\n      if (checkedCount && checkedCount === total) {\n        checkedKeySet.add(parentKey);\n      } else {\n        checkedKeySet[\"delete\"](parentKey);\n      }\n    }\n    parentNode = parentNode.parent;\n  };\n  while (parentNode) {\n    _loop();\n  }\n}\nfunction getCheckedStateByCheck(options) {\n  var node = options.node,\n    checked = options.checked,\n    checkedKeys = options.checkedKeys,\n    indeterminateKeys = options.indeterminateKeys,\n    _options$checkStrictl = options.checkStrictly,\n    checkStrictly = _options$checkStrictl === void 0 ? false : _options$checkStrictl;\n  var key = node.key;\n  var checkedKeySet = new Set(checkedKeys);\n  var indeterminateKeySet = new Set(indeterminateKeys);\n  checked ? checkedKeySet.add(key) : checkedKeySet[\"delete\"](key);\n  indeterminateKeySet[\"delete\"](key);\n  if (!checkStrictly) {\n    var childKeys = getChildrenKeys(node);\n    if (checked) {\n      childKeys.forEach(SetAdd(checkedKeySet));\n    } else {\n      childKeys.forEach(SetDelete(checkedKeySet));\n    }\n    childKeys.forEach(SetDelete(indeterminateKeySet));\n    updateParent({\n      node: node,\n      checkedKeySet: checkedKeySet,\n      indeterminateKeySet: indeterminateKeySet\n    });\n  }\n  return [_toConsumableArray(checkedKeySet), _toConsumableArray(indeterminateKeySet)];\n}\nfunction getCheckedStateByInitKeys(options) {\n  var initCheckedKeys = options.initCheckedKeys,\n    key2TreeNode = options.key2TreeNode,\n    checkStrictly = options.checkStrictly,\n    onlyCheckLeaf = options.onlyCheckLeaf;\n  var checkedKeySet = new Set();\n  var childCheckedKeySet = new Set();\n  var indeterminateKeySet = new Set();\n  if (!checkStrictly) {\n    initCheckedKeys.forEach(function (key) {\n      var _a;\n      var node = key2TreeNode.get(key);\n      if (!node || childCheckedKeySet.has(key) || onlyCheckLeaf && ((_a = node.children) == null ? void 0 : _a.length)) {\n        return;\n      }\n      var childKeys = getChildrenKeys(node);\n      childKeys.forEach(SetAdd(childCheckedKeySet));\n      childKeys.forEach(SetDelete(indeterminateKeySet));\n      checkedKeySet.add(key);\n      indeterminateKeySet[\"delete\"](key);\n      updateParent({\n        node: node,\n        checkedKeySet: checkedKeySet,\n        indeterminateKeySet: indeterminateKeySet\n      });\n    });\n  } else {\n    initCheckedKeys.forEach(SetAdd(checkedKeySet));\n  }\n  return [[].concat(_toConsumableArray(checkedKeySet), _toConsumableArray(childCheckedKeySet)), _toConsumableArray(indeterminateKeySet)];\n}\nexport { getCheckedStateByCheck, getCheckedStateByInitKeys, isNodeCheckable };","map":{"version":3,"names":["SetAdd","set","Set","prototype","add","bind","SetDelete","isNodeCheckable","node","disabled","disableCheckbox","checkable","getChildrenKeys","_a","keys","children","forEach","child","push","apply","key","concat","_toConsumableArray","updateParent","options","checkedKeySet","indeterminateKeySet","parentNode","parent","_loop","parentKey","filter","checkedCount","total","length","some","_ref","childKey","has","getCheckedStateByCheck","checked","checkedKeys","indeterminateKeys","_options$checkStrictl","checkStrictly","childKeys","getCheckedStateByInitKeys","initCheckedKeys","key2TreeNode","onlyCheckLeaf","childCheckedKeySet","get"],"sources":["/root/FrontPlatform/vue-front/node_modules/@arco-design/web-vue/es/tree/utils/check-utils.js"],"sourcesContent":["function SetAdd(set) {\n  return Set.prototype.add.bind(set);\n}\nfunction SetDelete(set) {\n  return Set.prototype.delete.bind(set);\n}\nfunction isNodeCheckable(node) {\n  if (node.disabled || node.disableCheckbox)\n    return false;\n  return !!node.checkable;\n}\nfunction getChildrenKeys(node) {\n  var _a;\n  const keys = [];\n  (_a = node.children) == null ? void 0 : _a.forEach((child) => {\n    if (isNodeCheckable(child)) {\n      keys.push(child.key, ...getChildrenKeys(child));\n    }\n  });\n  return keys;\n}\nfunction updateParent(options) {\n  var _a;\n  const { node, checkedKeySet, indeterminateKeySet } = options;\n  let parentNode = node.parent;\n  while (parentNode) {\n    if (isNodeCheckable(parentNode)) {\n      const parentKey = parentNode.key;\n      const children = ((_a = parentNode.children) == null ? void 0 : _a.filter(isNodeCheckable)) || [];\n      let checkedCount = 0;\n      const total = children.length;\n      children.some(({ key: childKey }) => {\n        if (checkedKeySet.has(childKey)) {\n          checkedCount += 1;\n        } else if (indeterminateKeySet.has(childKey)) {\n          checkedCount += 0.5;\n          return true;\n        }\n        return false;\n      });\n      if (checkedCount && checkedCount !== total) {\n        indeterminateKeySet.add(parentKey);\n      } else {\n        indeterminateKeySet.delete(parentKey);\n      }\n      if (checkedCount && checkedCount === total) {\n        checkedKeySet.add(parentKey);\n      } else {\n        checkedKeySet.delete(parentKey);\n      }\n    }\n    parentNode = parentNode.parent;\n  }\n}\nfunction getCheckedStateByCheck(options) {\n  const {\n    node,\n    checked,\n    checkedKeys,\n    indeterminateKeys,\n    checkStrictly = false\n  } = options;\n  const { key } = node;\n  const checkedKeySet = new Set(checkedKeys);\n  const indeterminateKeySet = new Set(indeterminateKeys);\n  checked ? checkedKeySet.add(key) : checkedKeySet.delete(key);\n  indeterminateKeySet.delete(key);\n  if (!checkStrictly) {\n    const childKeys = getChildrenKeys(node);\n    if (checked) {\n      childKeys.forEach(SetAdd(checkedKeySet));\n    } else {\n      childKeys.forEach(SetDelete(checkedKeySet));\n    }\n    childKeys.forEach(SetDelete(indeterminateKeySet));\n    updateParent({ node, checkedKeySet, indeterminateKeySet });\n  }\n  return [[...checkedKeySet], [...indeterminateKeySet]];\n}\nfunction getCheckedStateByInitKeys(options) {\n  const { initCheckedKeys, key2TreeNode, checkStrictly, onlyCheckLeaf } = options;\n  const checkedKeySet = new Set();\n  const childCheckedKeySet = new Set();\n  const indeterminateKeySet = new Set();\n  if (!checkStrictly) {\n    initCheckedKeys.forEach((key) => {\n      var _a;\n      const node = key2TreeNode.get(key);\n      if (!node || childCheckedKeySet.has(key) || onlyCheckLeaf && ((_a = node.children) == null ? void 0 : _a.length)) {\n        return;\n      }\n      const childKeys = getChildrenKeys(node);\n      childKeys.forEach(SetAdd(childCheckedKeySet));\n      childKeys.forEach(SetDelete(indeterminateKeySet));\n      checkedKeySet.add(key);\n      indeterminateKeySet.delete(key);\n      updateParent({ node, checkedKeySet, indeterminateKeySet });\n    });\n  } else {\n    initCheckedKeys.forEach(SetAdd(checkedKeySet));\n  }\n  return [[...checkedKeySet, ...childCheckedKeySet], [...indeterminateKeySet]];\n}\nexport { getCheckedStateByCheck, getCheckedStateByInitKeys, isNodeCheckable };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}