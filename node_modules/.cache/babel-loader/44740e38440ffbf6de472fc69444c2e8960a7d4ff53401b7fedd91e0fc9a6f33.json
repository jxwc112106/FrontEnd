{"ast":null,"code":"import { createStore } from 'vuex';\nimport api from '../api/networkRequest';\nexport default createStore({\n  state: {\n    vCodepath: \"\",\n    username: \"\",\n    password: \"\",\n    verificationCode: \"\",\n    verificationCodeId: \"\",\n    loginStatus: false\n  },\n  getters: {\n    getVcodePath: function getVcodePath(state) {\n      return state.vCodepath;\n    },\n    getUserName: function getUserName(state) {\n      return state.username;\n    },\n    getPassWord: function getPassWord(state) {\n      return state.password;\n    },\n    getVerificationCode: function getVerificationCode(state) {\n      return state.verificationCode;\n    },\n    getVerificationCodeId: function getVerificationCodeId(state) {\n      return state.verificationCodeId;\n    },\n    getLoginStatus: function getLoginStatus(state) {\n      return state.loginStatus;\n    }\n  },\n  mutations: {\n    setVcodePath: function setVcodePath(state, vCodepath) {\n      state.vCodepath = vCodepath;\n    },\n    setUserName: function setUserName(state, username) {\n      state.username = username;\n    },\n    setPassWord: function setPassWord(state, password) {\n      state.password = password;\n    },\n    setVerificationCode: function setVerificationCode(state, verificationCode) {\n      state.verificationCode = verificationCode;\n    },\n    setVerificationCodeId: function setVerificationCodeId(state, verificationCodeId) {\n      state.verificationCodeId = verificationCodeId;\n    },\n    setLoginStatus: function setLoginStatus(state, loginStatus) {\n      state.loginStatus = loginStatus;\n    }\n  },\n  actions: {\n    asyncGetVerification: function asyncGetVerification(_ref) {\n      var commit = _ref.commit;\n      api.getVerificationCode().then(function (res) {\n        commit(\"update v-code\", res.msg);\n      });\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["createStore","api","state","vCodepath","username","password","verificationCode","verificationCodeId","loginStatus","getters","getVcodePath","getUserName","getPassWord","getVerificationCode","getVerificationCodeId","getLoginStatus","mutations","setVcodePath","setUserName","setPassWord","setVerificationCode","setVerificationCodeId","setLoginStatus","actions","asyncGetVerification","_ref","commit","then","res","msg","modules"],"sources":["/root/FrontPlatform/vue-front/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\nimport api from '../api/networkRequest'\n\nexport default createStore({\n  state: {\n    vCodepath: \"\",\n    username: \"\",\n    password: \"\",\n    verificationCode: \"\",\n    verificationCodeId: \"\",\n    loginStatus: false\n  },\n  getters: {\n    getVcodePath(state) {\n      return state.vCodepath\n    },\n    getUserName(state) {\n      return state.username\n    },\n    getPassWord(state) {\n      return state.password\n    },\n    getVerificationCode(state) {\n      return state.verificationCode\n    },\n    getVerificationCodeId(state) {\n      return state.verificationCodeId\n    }, \n    getLoginStatus(state){\n      return state.loginStatus\n    }\n  },\n  mutations: {\n    setVcodePath(state,vCodepath) {\n      state.vCodepath = vCodepath\n    },\n    setUserName(state,username) {\n      state.username = username\n    },\n    setPassWord(state, password) {\n      state.password = password\n    },\n    setVerificationCode(state, verificationCode) {\n      state.verificationCode = verificationCode\n    },\n    setVerificationCodeId(state,verificationCodeId) {\n      state.verificationCodeId = verificationCodeId\n    },\n    setLoginStatus(state, loginStatus){\n      state.loginStatus = loginStatus\n    }\n\n  },\n  actions: {\n    asyncGetVerification({ commit }){\n      api.getVerificationCode()\n      .then(res =>{\n        commit(\"update v-code\",res.msg)\n      })\n     }\n  },\n  modules: {\n  }\n})\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,MAAM;AAClC,OAAOC,GAAG,MAAM,uBAAuB;AAEvC,eAAeD,WAAW,CAAC;EACzBE,KAAK,EAAE;IACLC,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE,EAAE;IACZC,QAAQ,EAAE,EAAE;IACZC,gBAAgB,EAAE,EAAE;IACpBC,kBAAkB,EAAE,EAAE;IACtBC,WAAW,EAAE;EACf,CAAC;EACDC,OAAO,EAAE;IACPC,YAAY,WAAAA,aAACR,KAAK,EAAE;MAClB,OAAOA,KAAK,CAACC,SAAS;IACxB,CAAC;IACDQ,WAAW,WAAAA,YAACT,KAAK,EAAE;MACjB,OAAOA,KAAK,CAACE,QAAQ;IACvB,CAAC;IACDQ,WAAW,WAAAA,YAACV,KAAK,EAAE;MACjB,OAAOA,KAAK,CAACG,QAAQ;IACvB,CAAC;IACDQ,mBAAmB,WAAAA,oBAACX,KAAK,EAAE;MACzB,OAAOA,KAAK,CAACI,gBAAgB;IAC/B,CAAC;IACDQ,qBAAqB,WAAAA,sBAACZ,KAAK,EAAE;MAC3B,OAAOA,KAAK,CAACK,kBAAkB;IACjC,CAAC;IACDQ,cAAc,WAAAA,eAACb,KAAK,EAAC;MACnB,OAAOA,KAAK,CAACM,WAAW;IAC1B;EACF,CAAC;EACDQ,SAAS,EAAE;IACTC,YAAY,WAAAA,aAACf,KAAK,EAACC,SAAS,EAAE;MAC5BD,KAAK,CAACC,SAAS,GAAGA,SAAS;IAC7B,CAAC;IACDe,WAAW,WAAAA,YAAChB,KAAK,EAACE,QAAQ,EAAE;MAC1BF,KAAK,CAACE,QAAQ,GAAGA,QAAQ;IAC3B,CAAC;IACDe,WAAW,WAAAA,YAACjB,KAAK,EAAEG,QAAQ,EAAE;MAC3BH,KAAK,CAACG,QAAQ,GAAGA,QAAQ;IAC3B,CAAC;IACDe,mBAAmB,WAAAA,oBAAClB,KAAK,EAAEI,gBAAgB,EAAE;MAC3CJ,KAAK,CAACI,gBAAgB,GAAGA,gBAAgB;IAC3C,CAAC;IACDe,qBAAqB,WAAAA,sBAACnB,KAAK,EAACK,kBAAkB,EAAE;MAC9CL,KAAK,CAACK,kBAAkB,GAAGA,kBAAkB;IAC/C,CAAC;IACDe,cAAc,WAAAA,eAACpB,KAAK,EAAEM,WAAW,EAAC;MAChCN,KAAK,CAACM,WAAW,GAAGA,WAAW;IACjC;EAEF,CAAC;EACDe,OAAO,EAAE;IACPC,oBAAoB,WAAAA,qBAAAC,IAAA,EAAY;MAAA,IAATC,MAAM,GAAAD,IAAA,CAANC,MAAM;MAC3BzB,GAAG,CAACY,mBAAmB,EAAE,CACxBc,IAAI,CAAC,UAAAC,GAAG,EAAG;QACVF,MAAM,CAAC,eAAe,EAACE,GAAG,CAACC,GAAG,CAAC;MACjC,CAAC,CAAC;IACH;EACH,CAAC;EACDC,OAAO,EAAE,CACT;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}