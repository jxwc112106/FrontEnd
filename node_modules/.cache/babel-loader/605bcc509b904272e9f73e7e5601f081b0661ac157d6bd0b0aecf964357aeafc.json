{"ast":null,"code":"import \"core-js/modules/es.array.for-each.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport { computed } from \"vue\";\nvar useSpan = function useSpan(_ref) {\n  var spanMethod = _ref.spanMethod,\n    data = _ref.data,\n    columns = _ref.columns;\n  var tableSpan = computed(function () {\n    var span = {};\n    if (spanMethod.value) {\n      data.value.forEach(function (record, rowIndex) {\n        columns.value.forEach(function (column, columnIndex) {\n          var _a, _b;\n          var _ref2 = (_b = (_a = spanMethod.value) == null ? void 0 : _a.call(spanMethod, {\n              record: record.raw,\n              column: column,\n              rowIndex: rowIndex,\n              columnIndex: columnIndex\n            })) != null ? _b : {},\n            _ref2$rowspan = _ref2.rowspan,\n            rowspan = _ref2$rowspan === void 0 ? 1 : _ref2$rowspan,\n            _ref2$colspan = _ref2.colspan,\n            colspan = _ref2$colspan === void 0 ? 1 : _ref2$colspan;\n          if (rowspan > 1 || colspan > 1) {\n            span[\"\".concat(rowIndex, \"-\").concat(columnIndex)] = [rowspan, colspan];\n          }\n        });\n      });\n    }\n    return span;\n  });\n  var removedCells = computed(function () {\n    var data2 = [];\n    for (var _i = 0, _Object$keys = Object.keys(tableSpan.value); _i < _Object$keys.length; _i++) {\n      var indexKey = _Object$keys[_i];\n      var indexArray = indexKey.split(\"-\").map(function (item) {\n        return Number(item);\n      });\n      var span = tableSpan.value[indexKey];\n      for (var i = 1; i < span[0]; i++) {\n        data2.push(\"\".concat(indexArray[0] + i, \"-\").concat(indexArray[1]));\n        for (var j = 1; j < span[1]; j++) {\n          data2.push(\"\".concat(indexArray[0] + i, \"-\").concat(indexArray[1] + j));\n        }\n      }\n      for (var _i2 = 1; _i2 < span[1]; _i2++) {\n        data2.push(\"\".concat(indexArray[0], \"-\").concat(indexArray[1] + _i2));\n      }\n    }\n    return data2;\n  });\n  return {\n    tableSpan: tableSpan,\n    removedCells: removedCells\n  };\n};\nexport { useSpan };","map":{"version":3,"names":["computed","useSpan","_ref","spanMethod","data","columns","tableSpan","span","value","forEach","record","rowIndex","column","columnIndex","_a","_b","_ref2","call","raw","_ref2$rowspan","rowspan","_ref2$colspan","colspan","concat","removedCells","data2","_i","_Object$keys","Object","keys","length","indexKey","indexArray","split","map","item","Number","i","push","j"],"sources":["/root/FrontPlatform/vue-front/node_modules/@arco-design/web-vue/es/table/hooks/use-span.js"],"sourcesContent":["import { computed } from \"vue\";\nconst useSpan = ({\n  spanMethod,\n  data,\n  columns\n}) => {\n  const tableSpan = computed(() => {\n    const span = {};\n    if (spanMethod.value) {\n      data.value.forEach((record, rowIndex) => {\n        columns.value.forEach((column, columnIndex) => {\n          var _a, _b;\n          const { rowspan = 1, colspan = 1 } = (_b = (_a = spanMethod.value) == null ? void 0 : _a.call(spanMethod, {\n            record: record.raw,\n            column,\n            rowIndex,\n            columnIndex\n          })) != null ? _b : {};\n          if (rowspan > 1 || colspan > 1) {\n            span[`${rowIndex}-${columnIndex}`] = [rowspan, colspan];\n          }\n        });\n      });\n    }\n    return span;\n  });\n  const removedCells = computed(() => {\n    const data2 = [];\n    for (const indexKey of Object.keys(tableSpan.value)) {\n      const indexArray = indexKey.split(\"-\").map((item) => Number(item));\n      const span = tableSpan.value[indexKey];\n      for (let i = 1; i < span[0]; i++) {\n        data2.push(`${indexArray[0] + i}-${indexArray[1]}`);\n        for (let j = 1; j < span[1]; j++) {\n          data2.push(`${indexArray[0] + i}-${indexArray[1] + j}`);\n        }\n      }\n      for (let i = 1; i < span[1]; i++) {\n        data2.push(`${indexArray[0]}-${indexArray[1] + i}`);\n      }\n    }\n    return data2;\n  });\n  return {\n    tableSpan,\n    removedCells\n  };\n};\nexport { useSpan };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}